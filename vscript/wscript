#!/usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'vscript'

def options(opt):
	# stub
	return

def configure(conf):
	conf.define('VSCRIPT_DLL_EXPORT',1)
	conf.define('LUA_MOD_CASE_INSENSITIVE',1)

def build(bld):
	source = [
		'vscript.cpp',
		'./languages/squirrel/vsquirrel/vsquirrel.cpp',
		'./languages/squirrel/squirrel/sqapi.cpp',
		'./languages/squirrel/squirrel/sqbaselib.cpp',
		"./languages/squirrel/squirrel/sqclass.cpp",
		"./languages/squirrel/squirrel/sqcompiler.cpp",
		"./languages/squirrel/squirrel/sqdebug.cpp",
		"./languages/squirrel/squirrel/sqfuncstate.cpp",
		"./languages/squirrel/squirrel/sqlexer.cpp",
		"./languages/squirrel/squirrel/sqmem.cpp",
		"./languages/squirrel/squirrel/sqobject.cpp",
		"./languages/squirrel/squirrel/sqstate.cpp",
		"./languages/squirrel/squirrel/sqtable.cpp",
		"./languages/squirrel/squirrel/sqvm.cpp",
		"./languages/squirrel/sqdbg/sqrdbg.cpp",
		"./languages/squirrel/sqdbg/sqdbgserver.cpp",
		"./languages/squirrel/sqstdlib/sqstdaux.cpp",
		"./languages/squirrel/sqstdlib/sqstdblob.cpp",
		"./languages/squirrel/sqstdlib/sqstdmath.cpp",
		"./languages/squirrel/sqstdlib/sqstdrex.cpp",
		"./languages/squirrel/sqstdlib/sqstdstream.cpp",
		"./languages/squirrel/sqstdlib/sqstdstring.cpp",
		"./languages/squirrel/sqplus/SqPlus.cpp",
		"./languages/squirrel/sqplus/SquirrelBindingsUtils.cpp",
		"./languages/squirrel/sqplus/SquirrelObject.cpp",
		"./languages/squirrel/sqplus/SquirrelVM.cpp"
	]
	if bld.env.DEST_OS == 'win32': # windows shit
		source.append('./languages/squirrel/sqplus/SquirrelBindingsUtilsWin32.cpp')

	includes = [
		'.',
		'../public',
		'../public/tier0',
		'../public/tier1',
		'../common',
		'./languages/squirrel/include',
		'./languages/squirrel/sqplus',
		'./languages/lua/lua-5.1.4/src'
	]

	defines = []

	libs = ['tier0','tier1','tier2','vstdlib','mathlib']

	install_path = bld.env.LIBDIR

	bld.shlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)
